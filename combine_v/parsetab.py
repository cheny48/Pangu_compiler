
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/%ANDORrightUMINUSUNOT2GT 2LT 2MINUS 2PLUS AND BOOL BREAK CATCH CHAR CHAR_LIT CLASS CLASSNAME CLASSNAME_DOT CLASSNAME_LP CONST CONTINUE DOT ELSE EQ ERROR EXTENDS FALSE FLOAT FLOAT_LIT FOR GE GOTO GT ID IDOF ID_COLON ID_DOT ID_LP IF INT_LIT LE LINE_COMMENT LT MULTILINE_COMMENT MULTILINE_COMMENT_END NE NEW NOREF NOT OR PASSIG PERMANENT PRETURN PRIVATE PUBLIC RETURN SHARED SIZEOF STRING STRING_LIT TERMINATE THROW TRUE TRY TYPEOF VOID WHILEexpression : simple_expression\n                  | modifier\n                  | expression '+' expression\n                  | expression '-' expression\n                  | expression '*' expression\n                  | expression '/' expression\n                  | expression '%' expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression : '-' simple_expression %prec UMINUSexpression : NOT simple_expression %prec UNOTsimple_expression : '(' expression ')'simple_expression : INT_LITsimple_expression : FLOAT_LITsimple_expression : FALSE\n                         | TRUEsimple_expression : CHAR_LITsimple_expression : STRING_LIT reference : ID_DOT referencereference : IDsimple_expression : referencemodifier : CONST\n                | "
    
_lr_action_items = {'+':([0,1,2,3,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-10,17,-1,-2,-10,-14,-15,-16,-17,-18,-19,-22,-23,-21,-10,-10,-10,-10,-10,-10,-10,-11,-12,17,-20,-3,-4,-5,-6,-7,-8,-9,-13,]),'-':([0,1,2,3,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[4,18,-1,-2,4,-14,-15,-16,-17,-18,-19,-22,-23,-21,4,4,4,4,4,4,4,-11,-12,18,-20,-3,-4,-5,-6,-7,-8,-9,-13,]),'*':([0,1,2,3,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-10,19,-1,-2,-10,-14,-15,-16,-17,-18,-19,-22,-23,-21,-10,-10,-10,-10,-10,-10,-10,-11,-12,19,-20,19,19,-5,-6,-7,-8,-9,-13,]),'/':([0,1,2,3,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-10,20,-1,-2,-10,-14,-15,-16,-17,-18,-19,-22,-23,-21,-10,-10,-10,-10,-10,-10,-10,-11,-12,20,-20,20,20,-5,-6,-7,-8,-9,-13,]),'%':([0,1,2,3,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-10,21,-1,-2,-10,-14,-15,-16,-17,-18,-19,-22,-23,-21,-10,-10,-10,-10,-10,-10,-10,-11,-12,21,-20,21,21,-5,-6,-7,-8,-9,-13,]),'AND':([0,1,2,3,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-10,22,-1,-2,-10,-14,-15,-16,-17,-18,-19,-22,-23,-21,-10,-10,-10,-10,-10,-10,-10,-11,-12,22,-20,22,22,-5,-6,-7,-8,-9,-13,]),'OR':([0,1,2,3,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-10,23,-1,-2,-10,-14,-15,-16,-17,-18,-19,-22,-23,-21,-10,-10,-10,-10,-10,-10,-10,-11,-12,23,-20,23,23,-5,-6,-7,-8,-9,-13,]),'$end':([0,1,2,3,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,],[-10,0,-1,-2,-14,-15,-16,-17,-18,-19,-22,-23,-21,-10,-10,-10,-10,-10,-10,-10,-11,-12,-20,-3,-4,-5,-6,-7,-8,-9,-13,]),'NOT':([0,6,17,18,19,20,21,22,23,],[5,5,5,5,5,5,5,5,5,]),'(':([0,4,5,6,17,18,19,20,21,22,23,],[6,6,6,6,6,6,6,6,6,6,6,]),'INT_LIT':([0,4,5,6,17,18,19,20,21,22,23,],[7,7,7,7,7,7,7,7,7,7,7,]),'FLOAT_LIT':([0,4,5,6,17,18,19,20,21,22,23,],[8,8,8,8,8,8,8,8,8,8,8,]),'FALSE':([0,4,5,6,17,18,19,20,21,22,23,],[9,9,9,9,9,9,9,9,9,9,9,]),'TRUE':([0,4,5,6,17,18,19,20,21,22,23,],[10,10,10,10,10,10,10,10,10,10,10,]),'CHAR_LIT':([0,4,5,6,17,18,19,20,21,22,23,],[11,11,11,11,11,11,11,11,11,11,11,]),'STRING_LIT':([0,4,5,6,17,18,19,20,21,22,23,],[12,12,12,12,12,12,12,12,12,12,12,]),'CONST':([0,6,17,18,19,20,21,22,23,],[14,14,14,14,14,14,14,14,14,]),'ID_DOT':([0,4,5,6,15,17,18,19,20,21,22,23,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'ID':([0,4,5,6,15,17,18,19,20,21,22,23,],[16,16,16,16,16,16,16,16,16,16,16,16,]),')':([2,3,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[-1,-2,-10,-14,-15,-16,-17,-18,-19,-22,-23,-21,-10,-10,-10,-10,-10,-10,-10,-11,-12,35,-20,-3,-4,-5,-6,-7,-8,-9,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,17,18,19,20,21,22,23,],[1,26,28,29,30,31,32,33,34,]),'simple_expression':([0,4,5,6,17,18,19,20,21,22,23,],[2,24,25,2,2,2,2,2,2,2,2,]),'modifier':([0,6,17,18,19,20,21,22,23,],[3,3,3,3,3,3,3,3,3,]),'reference':([0,4,5,6,15,17,18,19,20,21,22,23,],[13,13,13,13,27,13,13,13,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> simple_expression','expression',1,'p_expression','panguyacc.py',15),
  ('expression -> modifier','expression',1,'p_expression','panguyacc.py',16),
  ('expression -> expression + expression','expression',3,'p_expression','panguyacc.py',17),
  ('expression -> expression - expression','expression',3,'p_expression','panguyacc.py',18),
  ('expression -> expression * expression','expression',3,'p_expression','panguyacc.py',19),
  ('expression -> expression / expression','expression',3,'p_expression','panguyacc.py',20),
  ('expression -> expression % expression','expression',3,'p_expression','panguyacc.py',21),
  ('expression -> expression AND expression','expression',3,'p_expression','panguyacc.py',22),
  ('expression -> expression OR expression','expression',3,'p_expression','panguyacc.py',23),
  ('expression -> <empty>','expression',0,'p_expression','panguyacc.py',24),
  ('expression -> - simple_expression','expression',2,'p_expression_uminus','panguyacc.py',40),
  ('expression -> NOT simple_expression','expression',2,'p_expression_not','panguyacc.py',44),
  ('simple_expression -> ( expression )','simple_expression',3,'p_expression_group','panguyacc.py',49),
  ('simple_expression -> INT_LIT','simple_expression',1,'p_expression_int_literal','panguyacc.py',53),
  ('simple_expression -> FLOAT_LIT','simple_expression',1,'p_expression_float_literal','panguyacc.py',57),
  ('simple_expression -> FALSE','simple_expression',1,'p_expression_bool_literal','panguyacc.py',61),
  ('simple_expression -> TRUE','simple_expression',1,'p_expression_bool_literal','panguyacc.py',62),
  ('simple_expression -> CHAR_LIT','simple_expression',1,'p_expression_char_literal','panguyacc.py',69),
  ('simple_expression -> STRING_LIT','simple_expression',1,'p_expression_string_literal','panguyacc.py',73),
  ('reference -> ID_DOT reference','reference',2,'p_reference1','panguyacc.py',77),
  ('reference -> ID','reference',1,'p_referene2','panguyacc.py',81),
  ('simple_expression -> reference','simple_expression',1,'p_expression_reference','panguyacc.py',85),
  ('modifier -> CONST','modifier',1,'p_modifier','panguyacc.py',144),
  ('modifier -> <empty>','modifier',0,'p_modifier','panguyacc.py',145),
]
